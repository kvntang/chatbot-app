{"ast":null,"code":"var _jsxFileName = \"/Users/churuiliu/Desktop/chatbot-app/frontend/src/components/ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport MessageBubble from './MessageBubble';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleSendMessage = () => {\n    if (inputValue.trim() === '') return;\n    const newMessage = {\n      id: Date.now().toString(),\n      text: inputValue,\n      sender: 'user'\n    };\n    setMessages([...messages, newMessage]);\n    setInputValue('');\n\n    // Simulate bot response\n    setTimeout(() => {\n      const botReply = {\n        id: (Date.now() + 1).toString(),\n        text: `Bot reply to: ${inputValue}`,\n        sender: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, botReply]);\n    }, 1000);\n  };\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const newMessages = Array.from(messages);\n    const [reorderedMessage] = newMessages.splice(result.source.index, 1);\n    newMessages.splice(result.destination.index, 0, reorderedMessage);\n    setMessages(newMessages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-box\",\n    children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"messages\",\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: `messages-container ${snapshot.isDraggingOver ? 'dragging-over' : ''}`,\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: message.id,\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              className: `message-wrapper ${snapshot.isDragging ? 'dragging' : ''}`,\n              style: {\n                ...provided.draggableProps.style,\n                transition: snapshot.isDragging ? 'none' : 'all 0.3s ease'\n              },\n              children: /*#__PURE__*/_jsxDEV(MessageBubble, {\n                message: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"Type your message...\",\n        onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"slbeoFq67b53BRRhfk6DiRI5k0A=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","MessageBubble","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","inputValue","setInputValue","handleInputChange","e","target","value","handleSendMessage","trim","newMessage","id","Date","now","toString","text","sender","setTimeout","botReply","prevMessages","onDragEnd","result","destination","newMessages","Array","from","reorderedMessage","splice","source","index","className","children","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","map","message","draggableId","draggableProps","dragHandleProps","isDragging","style","transition","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","onChange","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["/Users/churuiliu/Desktop/chatbot-app/frontend/src/components/ChatBox.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport MessageBubble from './MessageBubble';\n\nconst ChatBox = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSendMessage = () => {\n    if (inputValue.trim() === '') return;\n\n    const newMessage = {\n      id: Date.now().toString(),\n      text: inputValue,\n      sender: 'user',\n    };\n\n    setMessages([...messages, newMessage]);\n    setInputValue('');\n\n    // Simulate bot response\n    setTimeout(() => {\n      const botReply = {\n        id: (Date.now() + 1).toString(),\n        text: `Bot reply to: ${inputValue}`,\n        sender: 'bot',\n      };\n      setMessages((prevMessages) => [...prevMessages, botReply]);\n    }, 1000);\n  };\n\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n\n    const newMessages = Array.from(messages);\n    const [reorderedMessage] = newMessages.splice(result.source.index, 1);\n    newMessages.splice(result.destination.index, 0, reorderedMessage);\n\n    setMessages(newMessages);\n  };\n\n  return (\n    <div className=\"chat-box\">\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"messages\">\n          {(provided, snapshot) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              className={`messages-container ${snapshot.isDraggingOver ? 'dragging-over' : ''}`}\n            >\n              {messages.map((message, index) => (\n                <Draggable key={message.id} draggableId={message.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      className={`message-wrapper ${snapshot.isDragging ? 'dragging' : ''}`}\n                      style={{\n                        ...provided.draggableProps.style,\n                        transition: snapshot.isDragging ? 'none' : 'all 0.3s ease',\n                      }}\n                    >\n                      <MessageBubble message={message} />\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={handleInputChange}\n          placeholder=\"Type your message...\"\n          onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n        />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}