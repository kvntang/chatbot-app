{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Downloads/chatbot-app/frontend/src/components/MessageBubble.js\";\n// // this is the component that renders the message bubbles in the chat window\n\n// import React from 'react';\n\n// const MessageBubble = ({ message, isActive, isOver }) => {\n//   let bubbleClass = message.sender === 'user' \n//     ? 'user-message' \n//     : message.sender === 'bot' \n//       ? 'bot-message' \n//       : 'merged-message';\n\n//   if (isOver && !isActive) {\n//     bubbleClass += ' dropzone';\n//   }\n\n//   if (isActive) {\n//     bubbleClass += ' dragging';\n//   }\n\n//   return (\n//     <div className={`message-bubble ${bubbleClass}`}>\n//       {message.text}\n//     </div>\n//   );\n// };\n\n// export default MessageBubble;\n\n// this is the component that renders the message bubbles in the chat window\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageBubble = ({\n  message,\n  isActive,\n  isOver\n}) => {\n  let backgroundColor;\n\n  // Determine base background color\n  if (message.sender === 'user') {\n    backgroundColor = '#e6f3ff'; // Light blue for user messages\n  } else if (message.sender === 'bot') {\n    backgroundColor = '#f0f0f0'; // Light gray for bot messages\n  } else {\n    backgroundColor = '#fff0e6'; // Light orange for merged messages\n  }\n\n  // Adjust color for drag and drop states\n  if (isOver && !isActive) {\n    backgroundColor = '#e6ffe6'; // Light green for dropzone\n  }\n  if (isActive) {\n    backgroundColor = '#ffe6e6'; // Light red for dragging\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-bubble\",\n    style: {\n      backgroundColor\n    },\n    children: message.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageBubble;\nexport default MessageBubble;\nvar _c;\n$RefreshReg$(_c, \"MessageBubble\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageBubble","message","isActive","isOver","backgroundColor","sender","className","style","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kevin/Downloads/chatbot-app/frontend/src/components/MessageBubble.js"],"sourcesContent":["// // this is the component that renders the message bubbles in the chat window\n\n// import React from 'react';\n\n// const MessageBubble = ({ message, isActive, isOver }) => {\n//   let bubbleClass = message.sender === 'user' \n//     ? 'user-message' \n//     : message.sender === 'bot' \n//       ? 'bot-message' \n//       : 'merged-message';\n\n//   if (isOver && !isActive) {\n//     bubbleClass += ' dropzone';\n//   }\n\n//   if (isActive) {\n//     bubbleClass += ' dragging';\n//   }\n\n//   return (\n//     <div className={`message-bubble ${bubbleClass}`}>\n//       {message.text}\n//     </div>\n//   );\n// };\n\n// export default MessageBubble;\n\n\n\n\n// this is the component that renders the message bubbles in the chat window\n\nimport React from 'react';\n\nconst MessageBubble = ({ message, isActive, isOver }) => {\n  let backgroundColor;\n\n  // Determine base background color\n  if (message.sender === 'user') {\n    backgroundColor = '#e6f3ff';  // Light blue for user messages\n  } else if (message.sender === 'bot') {\n    backgroundColor = '#f0f0f0';  // Light gray for bot messages\n  } else {\n    backgroundColor = '#fff0e6';  // Light orange for merged messages\n  }\n\n  // Adjust color for drag and drop states\n  if (isOver && !isActive) {\n    backgroundColor = '#e6ffe6';  // Light green for dropzone\n  }\n  if (isActive) {\n    backgroundColor = '#ffe6e6';  // Light red for dragging\n  }\n\n  return (\n    <div className=\"message-bubble\" style={{ backgroundColor }}>\n      {message.text}\n    </div>\n  );\n};\n\nexport default MessageBubble;"],"mappings":";AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EACvD,IAAIC,eAAe;;EAEnB;EACA,IAAIH,OAAO,CAACI,MAAM,KAAK,MAAM,EAAE;IAC7BD,eAAe,GAAG,SAAS,CAAC,CAAE;EAChC,CAAC,MAAM,IAAIH,OAAO,CAACI,MAAM,KAAK,KAAK,EAAE;IACnCD,eAAe,GAAG,SAAS,CAAC,CAAE;EAChC,CAAC,MAAM;IACLA,eAAe,GAAG,SAAS,CAAC,CAAE;EAChC;;EAEA;EACA,IAAID,MAAM,IAAI,CAACD,QAAQ,EAAE;IACvBE,eAAe,GAAG,SAAS,CAAC,CAAE;EAChC;EACA,IAAIF,QAAQ,EAAE;IACZE,eAAe,GAAG,SAAS,CAAC,CAAE;EAChC;EAEA,oBACEL,OAAA;IAAKO,SAAS,EAAC,gBAAgB;IAACC,KAAK,EAAE;MAAEH;IAAgB,CAAE;IAAAI,QAAA,EACxDP,OAAO,CAACQ;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACC,EAAA,GAzBId,aAAa;AA2BnB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}