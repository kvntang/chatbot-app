{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/kevin/Documents/GitHub/chatbot-app/frontend/src/components/kevin1.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, sortableKeyboardCoordinates, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { PlusIcon } from 'lucide-react';\n\n// Message component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = ({\n  id,\n  text\n}) => {\n  _s();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    zIndex: isDragging ? 100 : 1,\n    opacity: isDragging ? 0.5 : 1\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    ...attributes,\n    ...listeners,\n    className: `p-4 mb-2 rounded shadow transition-all duration-300 ${isDragging ? 'bg-gray-100' : 'bg-white'} relative group`,\n    style: style,\n    children: [text, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none\",\n      children: /*#__PURE__*/_jsxDEV(PlusIcon, {\n        className: \"w-6 h-6 text-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n// MessageList component\n_s(Message, \"iTIyvp0X9kMGpdHRsWsr2+tGbVI=\", false, function () {\n  return [useSortable];\n});\n_c = Message;\nexport default function MessageList() {\n  _s2();\n  const [messages, setMessages] = useState([{\n    id: '1',\n    text: 'Message 1'\n  }, {\n    id: '2',\n    text: 'Message 2'\n  }, {\n    id: '3',\n    text: 'Message 3'\n  }]);\n  const [nextId, setNextId] = useState(4);\n  const [newMessage, setNewMessage] = useState('');\n  const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates\n  }));\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (active.id !== over.id) {\n      setMessages(items => {\n        const oldIndex = items.findIndex(item => item.id === active.id);\n        const newIndex = items.findIndex(item => item.id === over.id);\n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n  const handleDragOver = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (active.id !== over.id) {\n      setMessages(items => {\n        const activeIndex = items.findIndex(item => item.id === active.id);\n        const overIndex = items.findIndex(item => item.id === over.id);\n\n        // Merge messages if dragged onto another\n        if (activeIndex !== -1 && overIndex !== -1) {\n          const newItems = [...items];\n          console.log(`Merging at index ${overIndex}`); // Console log the merge index\n\n          newItems[overIndex] = {\n            ...newItems[overIndex],\n            text: `${newItems[overIndex].text} ${newItems[activeIndex].text}`\n          };\n          newItems.splice(activeIndex, 1);\n          return newItems;\n        }\n        return items;\n      });\n    }\n  };\n  const addMessage = () => {\n    if (newMessage.trim() !== '') {\n      setMessages([...messages, {\n        id: nextId.toString(),\n        text: newMessage\n      }]);\n      setNextId(nextId + 1);\n      setNewMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 p-6 bg-gray-100 rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Drag and Drop Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        className: \"w-full p-2 border rounded\",\n        placeholder: \"Enter a new message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addMessage,\n        className: \"mt-2 w-full bg-blue-500 text-white p-2 rounded hover:bg-blue-600 transition-colors duration-300\",\n        children: \"Add Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      collisionDetection: closestCenter,\n      onDragEnd: handleDragEnd,\n      onDragOver: handleDragOver,\n      children: /*#__PURE__*/_jsxDEV(SortableContext, {\n        items: messages,\n        strategy: verticalListSortingStrategy,\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n          id: message.id,\n          text: message.text\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s2(MessageList, \"JdL1PffJYPHUCYnWL2cJtzrfsUk=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c2 = MessageList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"MessageList\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","React","useState","DndContext","closestCenter","KeyboardSensor","PointerSensor","useSensor","useSensors","arrayMove","SortableContext","sortableKeyboardCoordinates","useSortable","verticalListSortingStrategy","CSS","PlusIcon","jsxDEV","_jsxDEV","Message","id","text","attributes","listeners","setNodeRef","transform","transition","isDragging","style","Transform","toString","zIndex","opacity","ref","className","children","fileName","lineNumber","columnNumber","_c","MessageList","messages","setMessages","nextId","setNextId","newMessage","setNewMessage","sensors","coordinateGetter","handleDragEnd","event","active","over","items","oldIndex","findIndex","item","newIndex","handleDragOver","activeIndex","overIndex","newItems","console","log","splice","addMessage","trim","type","value","onChange","e","target","placeholder","onClick","collisionDetection","onDragEnd","onDragOver","strategy","map","message","_c2","$RefreshReg$"],"sources":["/Users/kevin/Documents/GitHub/chatbot-app/frontend/src/components/kevin1.js"],"sourcesContent":["\"use client\"\n\nimport React, { useState } from 'react'\nimport { DndContext, closestCenter, KeyboardSensor, PointerSensor, useSensor, useSensors } from '@dnd-kit/core'\nimport { arrayMove, SortableContext, sortableKeyboardCoordinates, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable'\nimport { CSS } from '@dnd-kit/utilities'\nimport { PlusIcon } from 'lucide-react'\n\n// Message component\nconst Message = ({ id, text }) => {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id })\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    zIndex: isDragging ? 100 : 1,\n    opacity: isDragging ? 0.5 : 1,\n  }\n\n  return (\n    <div\n      ref={setNodeRef}\n      {...attributes}\n      {...listeners}\n      className={`p-4 mb-2 rounded shadow transition-all duration-300 ${\n        isDragging ? 'bg-gray-100' : 'bg-white'\n      } relative group`}\n      style={style}\n    >\n      {text}\n      <div className=\"absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none\">\n        <PlusIcon className=\"w-6 h-6 text-blue-500\" />\n      </div>\n    </div>\n  )\n}\n\n// MessageList component\nexport default function MessageList() {\n  const [messages, setMessages] = useState([\n    { id: '1', text: 'Message 1' },\n    { id: '2', text: 'Message 2' },\n    { id: '3', text: 'Message 3' },\n  ])\n  const [nextId, setNextId] = useState(4)\n  const [newMessage, setNewMessage] = useState('')\n\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  )\n\n  const handleDragEnd = (event) => {\n    const { active, over } = event\n\n    if (active.id !== over.id) {\n      setMessages((items) => {\n        const oldIndex = items.findIndex((item) => item.id === active.id)\n        const newIndex = items.findIndex((item) => item.id === over.id)\n        return arrayMove(items, oldIndex, newIndex)\n      })\n    }\n  }\n\n  const handleDragOver = (event) => {\n    const { active, over } = event\n    if (active.id !== over.id) {\n      setMessages((items) => {\n        const activeIndex = items.findIndex((item) => item.id === active.id)\n        const overIndex = items.findIndex((item) => item.id === over.id)\n\n        // Merge messages if dragged onto another\n        if (activeIndex !== -1 && overIndex !== -1) {\n          const newItems = [...items]\n          console.log(`Merging at index ${overIndex}`) // Console log the merge index\n          \n          newItems[overIndex] = {\n            ...newItems[overIndex],\n            text: `${newItems[overIndex].text} ${newItems[activeIndex].text}`,\n          }\n          newItems.splice(activeIndex, 1)\n          return newItems\n        }\n\n        return items\n      })\n    }\n  }\n\n  const addMessage = () => {\n    if (newMessage.trim() !== '') {\n      setMessages([...messages, { id: nextId.toString(), text: newMessage }])\n      setNextId(nextId + 1)\n      setNewMessage('')\n    }\n  }\n\n  return (\n    <div className=\"max-w-md mx-auto mt-10 p-6 bg-gray-100 rounded-lg shadow-lg\">\n      <h1 className=\"text-2xl font-bold mb-4\">Drag and Drop Messages</h1>\n      <div className=\"mb-4\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          className=\"w-full p-2 border rounded\"\n          placeholder=\"Enter a new message\"\n        />\n        <button\n          onClick={addMessage}\n          className=\"mt-2 w-full bg-blue-500 text-white p-2 rounded hover:bg-blue-600 transition-colors duration-300\"\n        >\n          Add Message\n        </button>\n      </div>\n      <DndContext \n        sensors={sensors}\n        collisionDetection={closestCenter}\n        onDragEnd={handleDragEnd}\n        onDragOver={handleDragOver}\n      >\n        <SortableContext items={messages} strategy={verticalListSortingStrategy}>\n          {messages.map((message) => (\n            <Message key={message.id} id={message.id} text={message.text} />\n          ))}\n        </SortableContext>\n      </DndContext>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}