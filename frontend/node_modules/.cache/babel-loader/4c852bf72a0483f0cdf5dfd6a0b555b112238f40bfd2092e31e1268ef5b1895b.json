{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Documents/GitHub/chatbot-app/frontend/src/components/MessageBubble.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageBubble = ({\n  message,\n  isActive,\n  isOver,\n  isDragging\n}) => {\n  let bubbleClass = message.sender === 'user' ? 'user-message' : message.sender === 'bot' ? 'bot-message' : 'merged-message';\n\n  // Apply the `over-message` class if `isOver` is true and the current message is not the one being dragged (`!isDragging`)\n  const dropzoneClass = isOver && !isDragging ? 'over-message' : '';\n\n  // Add a blue background when the message is being dragged\n  const draggingClass = isDragging ? 'dragging' : '';\n\n  // If the message is merged, keep it green unless it's being dragged over another green message\n  const mergedClass = message.isMerged && !(isDragging && isOver && message.isMerged) ? 'merged-message' : '';\n\n  // If a dragging green message is over a green target, turn both blue\n  const blueOverrideClass = (isDragging || isOver) && message.isMerged ? 'blue-override' : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message-bubble ${bubbleClass} ${dropzoneClass} ${draggingClass} ${mergedClass} ${blueOverrideClass}`,\n    children: message.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = MessageBubble;\nexport default MessageBubble;\nvar _c;\n$RefreshReg$(_c, \"MessageBubble\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageBubble","message","isActive","isOver","isDragging","bubbleClass","sender","dropzoneClass","draggingClass","mergedClass","isMerged","blueOverrideClass","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kevin/Documents/GitHub/chatbot-app/frontend/src/components/MessageBubble.js"],"sourcesContent":["import React from 'react';\n\nconst MessageBubble = ({ message, isActive, isOver, isDragging }) => {\n  let bubbleClass = message.sender === 'user' \n    ? 'user-message' \n    : message.sender === 'bot' \n      ? 'bot-message' \n      : 'merged-message';\n\n  // Apply the `over-message` class if `isOver` is true and the current message is not the one being dragged (`!isDragging`)\n  const dropzoneClass = isOver && !isDragging ? 'over-message' : '';\n\n  // Add a blue background when the message is being dragged\n  const draggingClass = isDragging ? 'dragging' : '';\n\n  // If the message is merged, keep it green unless it's being dragged over another green message\n  const mergedClass = message.isMerged && !(isDragging && isOver && message.isMerged) ? 'merged-message' : '';\n\n  // If a dragging green message is over a green target, turn both blue\n  const blueOverrideClass = (isDragging || isOver) && message.isMerged ? 'blue-override' : '';\n\n  return (\n    <div className={`message-bubble ${bubbleClass} ${dropzoneClass} ${draggingClass} ${mergedClass} ${blueOverrideClass}`}>\n      {message.text}\n    </div>\n  );\n};\n\nexport default MessageBubble;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC,MAAM;EAAEC;AAAW,CAAC,KAAK;EACnE,IAAIC,WAAW,GAAGJ,OAAO,CAACK,MAAM,KAAK,MAAM,GACvC,cAAc,GACdL,OAAO,CAACK,MAAM,KAAK,KAAK,GACtB,aAAa,GACb,gBAAgB;;EAEtB;EACA,MAAMC,aAAa,GAAGJ,MAAM,IAAI,CAACC,UAAU,GAAG,cAAc,GAAG,EAAE;;EAEjE;EACA,MAAMI,aAAa,GAAGJ,UAAU,GAAG,UAAU,GAAG,EAAE;;EAElD;EACA,MAAMK,WAAW,GAAGR,OAAO,CAACS,QAAQ,IAAI,EAAEN,UAAU,IAAID,MAAM,IAAIF,OAAO,CAACS,QAAQ,CAAC,GAAG,gBAAgB,GAAG,EAAE;;EAE3G;EACA,MAAMC,iBAAiB,GAAG,CAACP,UAAU,IAAID,MAAM,KAAKF,OAAO,CAACS,QAAQ,GAAG,eAAe,GAAG,EAAE;EAE3F,oBACEX,OAAA;IAAKa,SAAS,EAAE,kBAAkBP,WAAW,IAAIE,aAAa,IAAIC,aAAa,IAAIC,WAAW,IAAIE,iBAAiB,EAAG;IAAAE,QAAA,EACnHZ,OAAO,CAACa;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACC,EAAA,GAxBInB,aAAa;AA0BnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}